What is symlink?
symlinks are the pointers to the original file, which are similar to the shortcuts in the windows operating system.
There are 2 types of symlinks are there
1. softlink
2. hardlink

#1. softlink
The soflink is an symlink that we create to an original file/directory and has below characteristics
1.1 The softlinks can be created for both files/directories
1.2 The softlinks can be created for the remote files across the filesystem 
1.3 The permissions for a softlink file and the original file are different. 
	The softlink file always will be created with all the permissions and cannot be changed. Irrespective of the softlink file permission the users can access the files based on the original file permissions only, so permission on a symlink file seems to irrelevant
1.4 The inode address of the symlink file and the original file are different
1.5 if we move/change the original file the softlink is broken

#2. Hardlinks
The hardlinks are the other way of creating the symlinks where they hold the references of the inode of the original file rather than placing an pointer to the fileindex entry of the table. There are few notable characteristics of hardlink file described below.
2.1 The hardlinks can be created only for files 
2.2 These can be created only to the files located on the local filesystem
2.3 The filepermission of the hardlink file and the original file are same
2.4 The inode address of both hardllink and originalfile are same
2.5 even we move/modify the original file the hardlink will not be broken

How to create the symlinks?
The linux has provided an shell command called "ln" stands for create link

softlink:-
	ln -s sourcefile linkFileName
here -s stands for create an softlink file

hardlink:-
	ln sourcefile linkFileName
by default ln creates hardlink if we dont use "-s" switch
------------------------------------------------------------------------------------------
What are the best practices we need to apply while installing and running an software program on linux operating system?
(or)
How do you ensure the linux is secure in running the programs/processes on it?
Below are the best practices we need to follow while running processes on the linux system.
	#1. never launch/run any program/process under root/sudoer, because these process will get unrestricted access to all the system resources of the linux operating system, so that the system might get compromised 
	#2. For each software process/program to run create an dedicated user/group for launching software program
		1. The user we are adding should not be able to login to the linux system directly (so create user with no password/no home directory)
	#3. change the ownership of the files/folders of the software program to that user
	#4. change permissions to the files/folders of the software to 540
	#5. switch to the user through suoder and launch the software program under user

	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	


















