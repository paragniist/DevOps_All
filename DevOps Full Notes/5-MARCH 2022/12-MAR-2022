Process Management
-------------------
Program: Program is a file in which set of instructions are written that can be passed as an input to the operating system asking to execute on the underlying hardware of the computer

In a multi-user and multi-programming operating system like linux, the operating system shares the physical hardware/computing resources of the underlying computer across multiple programs running on that machine

How does operating system keeps track of the information about the current programs that are running on the computer and which program is using what system resources of the computer?
That is where operating system representing the program that is running on the machine creates an Process

A Process is nothing but a program under execution for which operating system identifies and allocates resources to execute. Linux operating system to identify each process uniquely it assigns an PID (process id) which is an unique number across all the process of the operating system and is generated by linux itself

by using the PID of a process we can manage the process. For each process linux internally keeps track for the information like
- owner = who launched the process
- group = belongs to which group
- PID = unique identification no of the process
- started date/time = when does the process has been started
- memory = allocated memory
- cpu = cpu allocated
- program = this process is created for executing which program
in a pcb block (process control block).
In linux each process information is stored in a process file under /proc directory

How to see the information about the processes that are running on the linux operating system?
In windows we have task manager in which we can see the process that are running and their memory and cpu utilization. there we can kill unresponsive process also

similarly in linux operating there is a shell command called top that displays the current running processes of the linux system.
top = "table of processes"	

top - 21:09:49 up 32 min,  1 user,  load average: 0.35, 0.11, 0.03
Tasks: 225 total,   1 running, 224 sleeping,   0 stopped,   0 zombie
%Cpu(s):  5.2 us,  1.8 sy,  0.8 ni, 91.2 id,  0.8 wa,  0.0 hi,  0.3 si,  0.0 st
MiB Mem :   5935.5 total,   4233.8 free,    635.6 used,   1066.1 buff/cache
MiB Swap:    923.3 total,    923.3 free,      0.0 used.   5063.0 avail Mem 

PID USER      PR  NI    VIRT    RES    SHR S  %CPU  %MEM     TIME+ COMMAND     
3153 sriman    20   0 3811828 239552 103384 S   3.3   3.9   0:04.94 gnome-shell 
2975 sriman    20   0  301616  73924  40380 S   1.0   1.2   0:01.66 Xorg        
3517 sriman    20   0  422684  33100  23524 S   1.0   0.5   0:00.28 update-notifier     
597 root      20   0  245088  12684   9092 S   0.7   0.2   0:01.78 polkitd             
291 root      20   0       0      0      0 I   0.3   0.0   0:01.19 kworker/0:3-events	
	
PID    = process id
USER   = owner who launched the process
PR     = priority 
NI     = nice value of the process
VIRT   = virtual memory assigned to the process
RES    = reservered memory
SHR    = shared memory
S      = status
%CPU   = %cpu usage
%MEM   = %memory usage
TIME+COMMAND = elapsed time (how long the process is running) and the command used for launching the process
	
These are the possible statuses in which a process can existing in linux operating system
D = daemon (un-interuptable process)
S = sleeping and cpu is not allocated
T = traced/terminated
R = running
I = Idle (cpu is allocated, but the process is not performing any operation)
Z = zoombie process

whenever linux creates a process, it assigns status to the process keep track/identify the execution status of the process
D = daemon (un-interrupted process) = background process which doesnt required user interaction, by default all the system processes are daemons that runs in background. usually the daemons are long running process
S = sleeping, the operating system has not allocated cpu to that process and the process is currently kept under waiting state
R = running, cpu is allocated to the process and it is under execution
T = Traced/Terminated, process completed its execution and has been terminated
I = idle, cpu is allocated to the process, but the process is waiting for completing an user input or for someother process/resource
Z = zoombie process

What is a zoombie process?
A process during execution might launch another process within it which is called a child process. Linux operating system to keep track of which are child process and what are the parent processes who launched this child process it stores PPID of the parent process for each child

Now whenever the child process finished execution and got terminated in general operating system should release the process information, but instead it marks the child process with status as "Z" without removing the process information, to let the parent process collect the information about the child

Zoombie = a process which has finished execution and terminated but kept in memory for parent process to use it
------------------------------------------------------------------------------------------

What is the priority of a process?
In a multi-user and multi-programming operating system when multiple processes are running the operating system will try to share the system resources to the process and tries to execute them simultaneously

To allocate the cpu for the process, the operating system uses cpu scheduling algorithms like
1. round-robin
2. time sharing
3. shorted job first
4. priority based scheduling etc
5. weighted route
6. largest job first

when it comes to linux operating system it uses hybrid model which is time sharing/round robin + and priority based scheduling in allocating the cpu
which means the cpu is allocated to each process sequentially for certain amount of time one after the another process, once it reaches to the last process again it starts allocating the cpu from 1st process

in addition we can tell to the linux operating system asking to allocate more cpu for a process by using priority. If the priority number is less means the process has more priority

In linux there are 2 types of process are there
1. System process = System processes are the mandatory process that are lauched by the linux operating system during the bootup and runs under system process space and are terminated along with the operating system.
	
2. User process = these are the processes launched by the user of linux operating system and runs under user space and can managed by the user

The priority of a process in linux operating system can be ranging from 0 - 139, within which the system process are launched under 0 - 99 and cannot be changed by the user. and for user process are launched with a priority ranging from 100 - 139 and can be modified by the user

by default when a user launched a process in linux operating system it will be assigned with a default priority as "120"
The linux operating system doesnt allows the user to change the priority of the process directly, because there is a chance where user might allocate priority of a process overriding system process space due to which the operating system might crash

so to allows us to modify the priority of a process in a controlled way linux has introduced nice value























































































































	
	
	
	
	
	
	
	
	
	
	
	
	
	
	

	


	
	
	
	




































