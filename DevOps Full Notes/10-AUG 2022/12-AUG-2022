Vagrant boxfile
Vagrant boxfile is an pre-packaged and compressed virtual disk image, that contains operating system, software utilities and configurations to import and create the virtual machine quickly

We need to bake our own vagrant boxfiles while working on a project, why?
	1. the pre-packaged and distributed boxfiles from the others may not contain the s/w utilities and configurations required for running our project, so again we need to additional install req libraries/configurations which is going to take lot of time
	2. due to organizational policies / licensing restrictions we cannot use the published boxfiles from vagrant cloud
	
How many ways we can create our own vagrant boxfile?
There are 2 ways
1. from an exiting vagrant boxfile
we can provision an virtual machine from one of the available boxfiles from vagrant cloud. then install req s/w packages, libraries and configurations on the virtual machine. then export the virtual machine as an boxfile to be used for your project

but this approach again boils down to organization policies/license issues and should be avoided while working for a project in an organization
		
2. new boxfile from scratch
It is highly recommended to create an vagrant boxfile from scratch using an operating system iso images rather than extending an existing vagrant boxfile
	1. when we are creating the boxfile from the existing boxfile, we need to investigate what packages or configurations are included in base box and we need to uninstall or modify those configurations to accomodate our requirement which is a tedious job. instead if we are building the boxfile from scratch we have total control on what should be going inside the boxfile
	2. no legal/licensing issues creeps up 
	
	
#2. How to build an vagrant box from scratch?
1. create an virtual machine in oracle virtualbox manager
	1.1 disable audio and usb access (security)
	1.2 increase the cpu allocation from 1 to 3/4
	1.3 configure nat network with port forwarding host: 2222, guest: 22
2. start the virtual machine
	2.1 upon first start of the virtual machine it prompts for installing the operating system, pass the operating system iso image and proceed for installation
	2.2 during the time of installing the operating system it prompts for root/password, provide as vagrant/vagrant only
	
3. Install the guest editions on the virtual machine, because without guest editions most of the features like sync_folder, networking and graphics/screen resolutions will not work

4. install the open-sshserver
  sudo apt update -y
	sudo apt install -y openssh-server
	
5. we need to configure ssh access to the vagrant user with known keys
create under vagrant user authorized_keys file add vagrant public key into the authorized_keys file
touch ~/.ssh/authorized_keys

ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA6NF8iallvQVp22WDkTkyrtvp9eWW6A8YVr+kz4TjGYe7gHzIw+niNltGEFHzD8+v1I2YJ6oXevct1YeS0o9HZyN1Q9qgCgzUFtdOKLv6IedplqoPkcmF0aYet2PkEDo3MlTBckFXPITAMzF8dJSIFo9D8HfdOV0IAdx4O7PtixWKn5y2hMNG0zQPyUecp4pzC6kivAIhyfHilFR61RGL+GPXQ2MWZWFYbAGjyiYJnAmCP3NOTd0jMZEnDkbUvxhMmBYSdETk1rRgm+R4LOzFUGaHqHDLKLX+FIPKcF96hrucXzcWyLbIbEgE98OHlnVYCzRdK8jlqm8tehUc9c9WhQ== vagrant insecure public key

6. by default ssh server allows us to login into the remote machine through sshkeys as well passwordAuthentication also we need to disable passwordAuthentication
goto /etc/ssh/sshd_config
change passwordAuthenticate no
restart the ssh server
systemctl restart ssh

7. configure password less sudoers access to the vagrant user
goto /etc/sudoers
add an entry into the sudoers file for vagrant user
vagrant ALL=(ALL) NOPASSWD:ALL


8. install additional software packages and configure them that are required for running your project
9. shutdown the virtual machine
10. package it as an boxfile by running
	vagrant package --base virtualmachinename
11. upload to vagrant cloud and distribute to others






































	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		