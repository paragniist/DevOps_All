Ansible architecture
Ansible is an software configuration management tool that automates the job of installing and configuring the softwares on the target machine. It has 5 core components in it
1. Ansible Modules
2. Ansible Control Node Server [Master]
3. Ansible Managed Node
4. Ansible Playbook
5. Inventory File

1. Ansible Module
Ansible modules are the code-blocks written in python language by the ansible developers and distributed aspart of the ansible install. Each module has been pre-coded to perform a stipulated task or an operation, and all the modules provided by the ansible has been written to enforce the principle of idempotancy.
These modules are designed to take data as an input to perform the operation and produces the output. For eg.. an copy module is used from copying an file/folder from source to destination, and it takes input as file/folder to be copied and destination dir where you want to copy.
The output might produce indicating the number of files being copied and status

2. Ansible Control Node Server
Ansible Control Node server is the engine of Ansible. Any machine on which the Ansible software has been installed will acts as an Ansible Control Node Server. The Control Node Server takes the Ansible Module/Playbook as an input and transfers the each module from Control NodeServer to the Managed Nodes along with their inputs. Executes the Module on the remote System and transfers the outcome of execution back to the ControlNode Server in JSON format and displays the outcome of execution to the enduser
1. The Control Node Server is completely stateless, no information about any of the nodes of the cluster will no be stored on Control Node Server
2. The Ansible Developer or DevOps engineer can use any machine as Control Node Server since it is stateless, only requirement for a machine to act as ControlNode Server is install ansible software
3. All the Machines on the Ansible cluster communicates with each other over SSH, so the nodes on cluster should be configured by enabling ssh access
4. Ansible has provided CLI tool through which the ansible developer/ops engineer can talk to the Control Node Server

3. Ansible Managed Node
Ansible Managed Node is a Server or a Computer within the organization whom we wanted to manage/install and configure the software so that is can be used for deploying and running the application.
1. The user on all the Managed nodes should be configured with password-less sudo access
2. SSH server should be installed and enable password-less authentication by adding a public key to the user
3. optionally install python on ansible managed node

4. Playbook
For achieving the desired state of the system, there could be bunch of software packages to be installed and configured on the managed nodes. These can be performed through Ansible by executing the ansible modules on the managed server through Control Node Server

Most of the time the ansible developer has to execute bunch of ansible modules sequentially by passing relevant inputs and gather the output of executions which has to be passed as an input to the next modules. So running each of these modules manually takes lot of time.
	
Instead ansible developer an declare and archestrate the modules he wanted to apply/execute on a managed server/group by writing them in Playbook. Playbooks are YAML files declared with ansible modules that can be passed as an input to Control Node Server, it parses and executes each module one by one across the list of servers specified

5. Inventory File
The Control Node Server is completely stateless, it doesnt carry any information related to the Fleet/Managed Nodes of the cluster. The ansible developer has to write the list of servers/computers on whom we wanted to apply the playbook/module by writing in a File called InventoryFile.
Now along with the playbook pass the inventoryFile as an input to ControlNode Server asking him to execute the modules

How to setup Ansible?
Ansible doesnt works on Windows operating system. even though the recent releases of ansible has added the support for working on Windows, it is a bit difficult to install and make ansible work on Windows. From this we can understand ansible should be installed and configured on Linux only

There are 2 ways to setup Ansible
1. through Windows Subsystem Linux (WSL) and is only supported by Windows 10 and above
2. Install Ansible Control Node Server and Ansible Managed nodes on the virtual machines only


1.Through Windows Subsystem Linux
If we are running on Windows 10 or above we can take the advantage of WSL on the windows kernal, which results in a better performance
WSL Stands for Windows Subsystem linux its a feature that is introduced by Microsoft enabling and allowing us to run Linux bash on windows operating system. There are 2 version of WSL are there
1.1. WSL1 = Within the Windows kernal the microsoft has shipped an interpreter which executes in a portable way of running linux bash commands on windows kernal. In WSL1 majority of linux commands works but still we see some in-compatible issues

1.2 WSL2 = The microsoft has shipped an full fledge linux kernal to be executed on windows by enable hyper-v virtualization internally, this indicates we are running an standalone linux kernal on a hypervisor independent of windows

by enabling WSL2 we cannot run both Hyperv and Oracle virtual box on the same machine. So this option cannot be used.
	
#2. setup the ansible cluster on Virtualization 


	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
























	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	




















	





















	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	