The ansible modules are grouped into categories to quickly identify and use them. Let us explore few of the popular modules of the ansible based on category
1. command category
There are 3 most popularly used modules under command category are
1.1 command module
1.2 shell module
1.3 expect module

Both these modules are used for executing linux commands on the managed nodes. There is a difference between these 2 modules. command module directly executes the linux command without using shell interpreter so that we will not be able to use shell capabilities like pipes and redirections. where as shell module uses shell interpreter (by default /bin/sh) so that we can use the shell capabilities (pipes/redirections).
it is not recommended to use shell/command module to achieve automation, since these 2 modules are not idempotent

1.1 command module
syntax:
1. command module with command for execution
- name: task
  command: command to be executed
	
2. command module execute by changing into a directory
- name: task
  command: command to be executed
	args:
    chdir: directory
			 
3. command module execute if the file path specified doesnt exits
- name: task
	command: command to be executed
	args:
		creates: pathToTheFile
------------------------------------------------------------------------------------------------------------------------
Shell module
------------
syntax:-
	
#1. shell module with linux command to be executed
- name: task
	shell: shellcommand
	
#2. shell module by switching to a directory
- name: task:
	shell: shellcommand
	args:
		chdir: directory
		
#3. shell module with creates option (if file doesnt exists then only execute)
- name: task
	shell: shellcommand
	args:
		creates: pathToTheFile
		
#4. shell module with removes option (command also we can use remove option), executes the module if the file exists
- name: task
	shell: shellcommand
	args:
    removes: pathToTheFile
------------------------------------------------------------------------------------------------------------------------
3. expect module
expect module is used for executing and shell script non-interactively.
	
addNumbers.sh
-------------
#!/bin/bash
read -p "enter a:" A
read -p "enter b:" B
SUM=$[A+B]
echo "SUM: $SUM"
	
Now we wanted to execute the above shellscript file non-interactively by passing the values through expect.
syntax:
- name: task
  expect:
		command: shellscriptfile or shellcommand
		chdir: directory
		echo: true
		responses:
			"enter a:": 10
			"enter b:": 20
------------------------------------------------------------------------------------------------------------------------
#2. File Category				
To work with performing operations on files/directories on the filesystem use File category modules rather than using command/shell module. We can perform various different file/directory operations like
1. copying files
2. creating/deleting files/folders
3. changing the ownership of the files/folders
4. inline edit (similar to sed)
al the above operations can be done with idempotancy by using file category modules

2.1 copy module
copy module is used for copying files/folders from ansible control node server to the managed nodesof the cluster. by default copy module looks for the source files specified on the local filesystem of the controlnode server and copies them to the destination directory of the managed nodes.
if we have the file to be copied in managed node itself, then we specify the remote_src: true indicating the source file is also in the managed node itself

1. copy file from source to destination directory
- name: task
	copy:
		src: filelocation
		dest: directoryLocation

2. copy file/folder from source to destination with given owner/group permissions
- name: task
	copy:
		src: file/directory Location
		dest: directoryLocation
		owner: 'owner'
		group: 'owner'
		mode: '0777'	
			
3. we can enforce validations while copying the file from source to destination
- name: task
	copy:
		src: file/directory location
		dest: directoryLocation
		validate: "/usr/bin/visudo -csf %s"




































				



		



























